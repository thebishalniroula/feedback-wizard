// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Question {
    id       String  @id @default(cuid())
    question String
    Form     Form?   @relation(fields: [formId], references: [id])
    formId   String?

    Answer Answer[]
}

model Answer {
    id String @id @default(cuid())

    question   Question @relation(fields: [questionId], references: [id])
    questionId String

    answer       String
    Submission   Submission? @relation(fields: [submissionId], references: [id])
    submissionId String?
}

model Form {
    id        String    @id @default(cuid())
    createdAt DateTime? @default(now())
    updatedAt DateTime?

    title       String
    description String?
    thumbnail   String?
    slug        String  @unique

    questions Question[]

    // owner       Company       @relation(fields: [companyId], references: [id])
    // companyId   String
    Submission Submission[]
    User       User?        @relation(fields: [userId], references: [id])
    userId     String?
}

model Submission {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    form      Form     @relation(fields: [formId], references: [id])
    formId    String
    answers   Answer[]
}

// model Company {
//     id              String   @id @default(cuid())
//     createdAt       DateTime @default(now())
//     email           String   @unique
//     isEmailVerified Boolean  @default(false)
//     name            String
//     location        String?
//     employees       User[]
//     Form            Form[]
// }

model User {
    id              String    @id @default(cuid())
    createdAt       DateTime? @default(now())
    name            String
    email           String    @unique
    password        String
    isEmailVerified Boolean?  @default(false)
    forms           Form[]
    username        String    @unique
    // Company         Company?  @relation(fields: [companyId], references: [id])
    // companyId       String?
    Account         Account[]
    Session         Session[]

    @@index([username])
}

model Account {
    id                 String    @id @default(cuid())
    userId             String
    providerType       String
    providerId         String
    providerAccountId  String
    refreshToken       String?
    accessToken        String?
    accessTokenExpires DateTime?
    createdAt          DateTime  @default(now())
    updatedAt          DateTime  @updatedAt
    user               User      @relation(fields: [userId], references: [id])

    @@unique([providerId, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    userId       String
    expires      DateTime
    sessionToken String   @unique
    accessToken  String   @unique
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    user         User     @relation(fields: [userId], references: [id])
}

model VerificationRequest {
    id         String   @id @default(cuid())
    identifier String
    token      String   @unique
    expires    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@unique([identifier, token])
}
